service: aws-superheroapi

provider:
  name: aws
  runtime: nodejs14.x 
  stage: dev
  region: ap-southeast-2
  environment:
    DYNAMODB_TABLE_NAME: ${self:custom.superheroTableName}

custom:
  superheroTableName: superhero-table-${self:provider.stage}

plugins:
  - serverless-iam-roles-per-function

functions:
  getSuperhero:
    handler: api.getSuperhero
    name: get-superhero
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: superheroes/{superheroId}
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:GetItem"
        Resource: !GetAtt SuperheroesTable.Arn # Amazon Reference Number?
  createSuperhero:
    handler: api.createSuperhero
    name: create-superhero
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: superheroes
          method: POST
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:PutItem"
        Resource: !GetAtt SuperheroesTable.Arn # Amazon Reference Number?
  updateSuperhero:
    handler: api.updateSuperhero
    name: update-superhero
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: superheroes/{superheroeId}
          method: PUT
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:UpdateItem"
        Resource: !GetAtt SuperheroesTable.Arn # Amazon Reference Number?
  deleteSuperhero:
    handler: api.deleteSuperhero
    name: delete-superhero
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: superheroes/{superheroeId}
          method: DELETE
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:DeleteItem"
        Resource: !GetAtt SuperheroesTable.Arn # Amazon Reference Number?
  getAllSuperheroes:
    handler: api.getAllSuperheroes
    name: get-all-superheroes
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: posts
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:Scan"
        Resource: !GetAtt SuperheroesTable.Arn # Amazon Reference Number?


resources:
  Resources:
    SupperheroesTable: 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.superheroTableName}
        AttributeDefinitions:
        - AttributeName: superheroId
          AttributeType: S
        KeySchema:
        - AttributeName: superheroId
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1